indexer
{
  mem_limit = 1024M
}

searchd
{
  listen = 127.0.0.1:9312:mysql41
  log = /Users/lexi87/dating/log/development.searchd.log
  query_log = /Users/lexi87/dating/log/development.searchd.query.log
  pid_file = /Users/lexi87/dating/log/development.sphinx.pid
  workers = threads
  binlog_path = /Users/lexi87/dating/tmp/binlog/development
}

source location_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = lexi87
  sql_pass = series2k
  sql_db = dating_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "locations"."id" * 5 + 0 AS "id", "locations"."city" AS "city", "locations"."id" AS "sphinx_internal_id", 'Location' AS "sphinx_internal_class", 0 AS "sphinx_deleted", RADIANS(locations.latitude) AS "latitude", RADIANS(locations.longitude) AS "longitude" FROM "locations"  WHERE ("locations"."id" BETWEEN $start AND $end) GROUP BY "locations"."id", "locations"."city", "locations"."id", latitude, longitude
  sql_query_range = SELECT COALESCE(MIN("locations"."id"), 1), COALESCE(MAX("locations"."id"), 1) FROM "locations"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_float = latitude
  sql_attr_float = longitude
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT "locations".* FROM "locations"  WHERE ("locations"."id" = ($id - 0) / 5)
}

index location_core
{
  type = plain
  path = /Users/lexi87/dating/db/sphinx/development/location_core
  docinfo = extern
  morphology = stem_en
  wordforms = lib/word.txt
  charset_type = utf-8
  source = location_core_0
}

source user_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = lexi87
  sql_pass = series2k
  sql_db = dating_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "users"."id" * 5 + 1 AS "id", "users"."name" AS "user", array_to_string(array_agg(DISTINCT letsgos."content"), ' ') AS "content", "users"."religion" AS "religion", "users"."about_me" AS "about_me", "users"."height" AS "height", "users"."career" AS "career", "users"."feet" AS "feet", "users"."inches" AS "inches", "users"."sexuality" AS "sexuality", "users"."children" AS "children", "users"."user_smoke" AS "user_smoke", "users"."user_drink" AS "user_drink", "users"."politics" AS "politics", "users"."gender" AS "gender", "users"."ethnicity" AS "ethnicity", "users"."education" AS "education", "users"."email" AS "email", "users"."zip_code" AS "zip_code", "users"."id" AS "sphinx_internal_id", 'User' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "users"."created_at")::int AS "created_at", extract(epoch from "users"."updated_at")::int AS "updated_at", RADIANS(locations.latitude) AS "latitude", RADIANS(locations.longitude) AS "longitude", "users"."id" AS "user_id", "users"."age" AS "age", "users"."username" AS "username", "users"."birthday" AS "birthday" FROM "users" LEFT OUTER JOIN "locations" ON "locations"."zip_code" = "users"."zip_code" LEFT OUTER JOIN "letsgos" ON "letsgos"."user_id" = "users"."id" WHERE ("users"."id" BETWEEN $start AND $end) GROUP BY "users"."id", "users"."name", "users"."religion", "users"."about_me", "users"."height", "users"."career", "users"."feet", "users"."inches", "users"."sexuality", "users"."children", "users"."user_smoke", "users"."user_drink", "users"."politics", "users"."gender", "users"."ethnicity", "users"."education", "users"."email", "users"."zip_code", "users"."id", "users"."created_at", "users"."updated_at", "users"."id", "users"."age", "users"."username", "users"."birthday", latitude, longitude
  sql_query_range = SELECT COALESCE(MIN("users"."id"), 1), COALESCE(MAX("users"."id"), 1) FROM "users"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_uint = age
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_float = latitude
  sql_attr_float = longitude
  sql_attr_string = sphinx_internal_class
  sql_attr_string = username
  sql_attr_string = birthday
  sql_field_string = user
  sql_query_post_index = UPDATE "users" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_info = SELECT "users".* FROM "users"  WHERE ("users"."id" = ($id - 1) / 5)
}

index user_core
{
  type = plain
  path = /Users/lexi87/dating/db/sphinx/development/user_core
  docinfo = extern
  morphology = stem_en
  wordforms = lib/word.txt
  charset_type = utf-8
  source = user_core_0
}

source user_delta_0
{
  type = pgsql
  sql_host = localhost
  sql_user = lexi87
  sql_pass = series2k
  sql_db = dating_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "users"."id" * 5 + 1 AS "id", "users"."name" AS "user", array_to_string(array_agg(DISTINCT letsgos."content"), ' ') AS "content", "users"."religion" AS "religion", "users"."about_me" AS "about_me", "users"."height" AS "height", "users"."career" AS "career", "users"."feet" AS "feet", "users"."inches" AS "inches", "users"."sexuality" AS "sexuality", "users"."children" AS "children", "users"."user_smoke" AS "user_smoke", "users"."user_drink" AS "user_drink", "users"."politics" AS "politics", "users"."gender" AS "gender", "users"."ethnicity" AS "ethnicity", "users"."education" AS "education", "users"."email" AS "email", "users"."zip_code" AS "zip_code", "users"."id" AS "sphinx_internal_id", 'User' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "users"."created_at")::int AS "created_at", extract(epoch from "users"."updated_at")::int AS "updated_at", RADIANS(locations.latitude) AS "latitude", RADIANS(locations.longitude) AS "longitude", "users"."id" AS "user_id", "users"."age" AS "age", "users"."username" AS "username", "users"."birthday" AS "birthday" FROM "users" LEFT OUTER JOIN "locations" ON "locations"."zip_code" = "users"."zip_code" LEFT OUTER JOIN "letsgos" ON "letsgos"."user_id" = "users"."id" WHERE ("users"."delta" = TRUE AND "users"."id" BETWEEN $start AND $end) GROUP BY "users"."id", "users"."name", "users"."religion", "users"."about_me", "users"."height", "users"."career", "users"."feet", "users"."inches", "users"."sexuality", "users"."children", "users"."user_smoke", "users"."user_drink", "users"."politics", "users"."gender", "users"."ethnicity", "users"."education", "users"."email", "users"."zip_code", "users"."id", "users"."created_at", "users"."updated_at", "users"."id", "users"."age", "users"."username", "users"."birthday", latitude, longitude
  sql_query_range = SELECT COALESCE(MIN("users"."id"), 1), COALESCE(MAX("users"."id"), 1) FROM "users"  WHERE ("users"."delta" = TRUE)
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_uint = age
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_float = latitude
  sql_attr_float = longitude
  sql_attr_string = sphinx_internal_class
  sql_attr_string = username
  sql_attr_string = birthday
  sql_field_string = user
  sql_query_info = SELECT "users".* FROM "users"  WHERE ("users"."id" = ($id - 1) / 5)
}

index user_delta
{
  type = plain
  path = /Users/lexi87/dating/db/sphinx/development/user_delta
  docinfo = extern
  morphology = stem_en
  wordforms = lib/word.txt
  charset_type = utf-8
  source = user_delta_0
}

index location
{
  type = distributed
  local = location_core
}

index user
{
  type = distributed
  local = user_core
  local = user_delta
}
